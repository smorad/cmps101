head	1.24;
access;
symbols;
locks;
comment	@ * @;


1.24
date	2013.05.01.19.42.47;	author -;	state -;
branches;
next	1.23;

1.23
date	2013.05.01.18.59.19;	author -;	state -;
branches;
next	1.22;

1.22
date	2013.05.01.18.58.45;	author -;	state -;
branches;
next	1.21;

1.21
date	2013.05.01.18.52.25;	author -;	state -;
branches;
next	1.20;

1.20
date	2013.04.30.04.07.24;	author -;	state -;
branches;
next	1.19;

1.19
date	2013.04.30.03.58.15;	author -;	state -;
branches;
next	1.18;

1.18
date	2013.04.30.03.57.45;	author -;	state -;
branches;
next	1.17;

1.17
date	2013.04.30.03.56.10;	author -;	state -;
branches;
next	1.16;

1.16
date	2013.04.30.02.01.31;	author -;	state -;
branches;
next	1.15;

1.15
date	2013.04.30.01.48.46;	author -;	state -;
branches;
next	1.14;

1.14
date	2013.04.30.01.47.17;	author -;	state -;
branches;
next	1.13;

1.13
date	2013.04.30.01.46.50;	author -;	state -;
branches;
next	1.12;

1.12
date	2013.04.29.18.10.25;	author -;	state -;
branches;
next	1.11;

1.11
date	2013.04.29.18.09.53;	author -;	state -;
branches;
next	1.10;

1.10
date	2013.04.29.18.06.53;	author -;	state -;
branches;
next	1.9;

1.9
date	2013.04.29.18.06.21;	author -;	state -;
branches;
next	1.8;

1.8
date	2013.04.29.17.53.55;	author -;	state -;
branches;
next	1.7;

1.7
date	2013.04.28.19.24.07;	author -;	state -;
branches;
next	1.6;

1.6
date	2013.04.28.19.23.18;	author -;	state -;
branches;
next	1.5;

1.5
date	2013.04.28.19.21.28;	author -;	state -;
branches;
next	1.4;

1.4
date	2013.04.28.19.17.25;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.04.28.19.17.12;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.04.28.18.50.17;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.04.27.21.27.07;	author -;	state -;
branches;
next	;


desc
@@


1.24
log
@-
@
text
@#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include "heap.h"
#include "heapSort.h"
#include "insertionSort.h"
int const HEAP_SIZE = 100000;
heap h;
clock_t startTime, duration;
void readFile(FILE *fp){
	int buff;
	int num = 0;
	int arr[HEAP_SIZE];
	while(fscanf(fp, "%d", &buff)!=-1){
		arr[num++] = buff;
	}	
	startTime = clock(); 
	insertionSort(arr, num);
	duration = clock()-startTime;
	printf("Insertion sort took %f seconds.\n", ((float)duration/CLOCKS_PER_SEC));
}


void readFileHeap(FILE *fp){
	int buff;
	int num = 0;
	int arr[HEAP_SIZE];
	while(fscanf(fp,"%d", &buff)!=-1){
		arr[num++] = buff;
	}
	startTime = clock();
	heapSort(arr, num);
	duration = clock()-startTime;
	printf("Heapsort took %f seconds.\n", ((float)duration/CLOCKS_PER_SEC));
}

void openFile(char* file){
	FILE *fp = fopen(file, "r");
	if(fp==NULL){
		printf("Invalid filename\n");
		exit(1);
	}
	readFile(fp);
	readFileHeap(fp);
	fclose(fp);
	
}

int main(int argv,char** args){
	h = newHeap(HEAP_SIZE);
	openFile(args[1]);
	delete(h);
}
@


1.23
log
@-
@
text
@d39 4
@


1.22
log
@-
@
text
@a34 1
	free(fp);
d41 1
@


1.21
log
@-
@
text
@d35 1
@


1.20
log
@-
@
text
@d47 1
@


1.19
log
@-
@
text
@d20 1
a20 1
	printf("Insertion sort took %f seconds.\n", ((float)duration*1000/CLOCKS_PER_SEC));
@


1.18
log
@-
@
text
@d20 1
a20 1
	printf("Insertion sort took %f seconds.\n", ((float)duration/CLOCKS_PER_SEC));
@


1.17
log
@-
@
text
@d17 1
a17 2
	startTime = clock();
	printf("%f\n", clock()); 
a18 1
	printf("%f\n", clock());
a27 1
	startTime = clock();
@


1.16
log
@-
@
text
@d7 1
a7 1
int const HEAP_SIZE = 1000;
d13 1
a13 1
	int arr[1024];
d29 1
a29 1
	int arr[1024];
@


1.15
log
@-
@
text
@a18 1
	for(int i=0; i<10000; i++)
@


1.14
log
@-
@
text
@d18 2
a19 2
	printf("%f\n", (float)clock()); 
	sleep(10);
d21 1
a21 1
	printf("%f\n", (float)clock());
@


1.13
log
@-
@
text
@d18 1
a18 1
	printf("%lu\n", (float)clock()); 
d21 1
a21 1
	printf("%lu\n", (float)clock());
@


1.12
log
@-
@
text
@d18 1
a18 1
	printf("%lu\n", clock()); 
d21 1
a21 1
	printf("%lu\n", clock());
@


1.11
log
@-
@
text
@d19 1
a19 1
	sleep(1000);
@


1.10
log
@-
@
text
@d19 1
a20 4
	for(int i=0; i<10,000; i++){
		int j = i;
		j=j*j;
	}
@


1.9
log
@-
@
text
@d20 4
a23 2
	for(int i=0; i<10,000; i++)
		i=i;
@


1.8
log
@-
@
text
@d18 1
a18 1
	printf("%f\n", clock());
d20 3
a22 1
	printf("%f\n", clock());
@


1.7
log
@-
@
text
@d18 1
d20 1
@


1.6
log
@-
@
text
@d39 1
a39 1
	FILE *fp = fopen(file, "w");
@


1.5
log
@-
@
text
@d18 1
a18 2
	heapSort(h, arr);
	
d26 2
d30 1
a30 1
		insert(h, buff);
d32 2
@


1.4
log
@-
@
text
@d6 1
d12 5
d18 2
a19 3
	while(fscanf(fp, "%d", &buff)!=-1){
		insert(h, buff);
	}
@


1.3
log
@-
@
text
@d39 1
a39 1
	openFile(args[0]);
@


1.2
log
@-
@
text
@d12 1
a12 1
	while(fscanf(fp, "%d", &buff)){
d23 1
a23 1
	while(fscanf(fp,"%d", &buff)!=NULL){
@


1.1
log
@-
@
text
@d23 1
a23 1
	while(fscanf(fp,"%d", &buff)){
@
